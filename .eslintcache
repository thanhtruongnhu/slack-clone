[{"F:\\GitHub\\slack-clone\\src\\index.js":"1","F:\\GitHub\\slack-clone\\src\\App.js":"2","F:\\GitHub\\slack-clone\\src\\reportWebVitals.js":"3","F:\\GitHub\\slack-clone\\src\\Header.js":"4","F:\\GitHub\\slack-clone\\src\\Sidebar.js":"5","F:\\GitHub\\slack-clone\\src\\SidebarOption.js":"6","F:\\GitHub\\slack-clone\\src\\firebase.js":"7","F:\\GitHub\\slack-clone\\src\\Chat.js":"8","F:\\GitHub\\slack-clone\\src\\Message.js":"9","F:\\GitHub\\slack-clone\\src\\Login.js":"10","F:\\GitHub\\slack-clone\\src\\StateProvider.js":"11","F:\\GitHub\\slack-clone\\src\\reducer.js":"12","F:\\GitHub\\slack-clone\\src\\ChatInput.js":"13"},{"size":691,"mtime":1612713439228,"results":"14","hashOfConfig":"15"},{"size":1488,"mtime":1612714799202,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1255,"mtime":1612717909348,"results":"18","hashOfConfig":"15"},{"size":3313,"mtime":1612718284357,"results":"19","hashOfConfig":"15"},{"size":1699,"mtime":1612625155014,"results":"20","hashOfConfig":"15"},{"size":823,"mtime":1612442053623,"results":"21","hashOfConfig":"15"},{"size":2514,"mtime":1612732164872,"results":"22","hashOfConfig":"15"},{"size":735,"mtime":1612741984031,"results":"23","hashOfConfig":"15"},{"size":1530,"mtime":1612728762090,"results":"24","hashOfConfig":"15"},{"size":1275,"mtime":1612715082254,"results":"25","hashOfConfig":"15"},{"size":844,"mtime":1612743483731,"results":"26","hashOfConfig":"15"},{"size":1075,"mtime":1612730093902,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ib2u4i",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"F:\\GitHub\\slack-clone\\src\\index.js",[],["58","59"],"F:\\GitHub\\slack-clone\\src\\App.js",["60"],"import './App.css';\nimport Header from './Header'\nimport Sidebar from './Sidebar'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Chat from \"./Chat\";\nimport Login from \"./Login\"\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  \n  // useStateValue is used to pull from the datalayer\n  // useStateValue uses the data from the reducer. And in reducer.js, the initialState value is null.\n  // Why useStateValue could pull data from reducer??? -> Answer: becuz userStateValue and reducer datalayer (StateContext) is under the same scope: StateProvider.js\n  const [{ user }, dispatch] = useStateValue()\n\n  return (\n    // BEM naming convention\n    <div className=\"App\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n            <>\n              <Header />\n              <div className=\"app__body\">\n                <Sidebar />\n                {/* Insert a SWITCH: this check which route that you're in. Based on which route you're in, it gonna render the screen accordingly */}\n                <Switch>\n                  <Route path=\"/room/:roomId\">\n                    <Chat />\n                  </Route>\n                  <Route path=\"/\">\n                    <h1>Welcome</h1>\n                  </Route>\n                </Switch>\n                {/*React-Router DOM -> Switching btw channels without refreshing*/}\n              </div>\n            </>\n          )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\GitHub\\slack-clone\\src\\reportWebVitals.js",[],"F:\\GitHub\\slack-clone\\src\\Header.js",[],"F:\\GitHub\\slack-clone\\src\\Sidebar.js",[],"F:\\GitHub\\slack-clone\\src\\SidebarOption.js",[],["61","62"],"F:\\GitHub\\slack-clone\\src\\firebase.js",[],"F:\\GitHub\\slack-clone\\src\\Chat.js",[],"F:\\GitHub\\slack-clone\\src\\Message.js",[],"F:\\GitHub\\slack-clone\\src\\Login.js",["63"],"import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\"\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nfunction Login() {\r\n    const [state, dispatch] = useStateValue();\r\n\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then(result => {\r\n                console.log(result);\r\n                // when received info from user, update the actionTypes and push it into the datalayer (reducer)\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                alert(error.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img\r\n                    src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\r\n                    // src=\"https://images.techhive.com/images/article/2016/11/siri-mac-icon-100694914-large.jpg\"\r\n                    alt=\"\"\r\n                />\r\n                <h1>Sign in to Kyle's Slack Clone</h1>\r\n                {/* <a href=\"https://www.github.com/\">Visit my github repo!</a> */}\r\n                <p>https://github.com/thanhtruongnhu</p>\r\n                <Button onClick={signIn}>Sign In With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","F:\\GitHub\\slack-clone\\src\\StateProvider.js",[],"F:\\GitHub\\slack-clone\\src\\reducer.js",[],"F:\\GitHub\\slack-clone\\src\\ChatInput.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":14,"column":20,"nodeType":"70","messageId":"71","endLine":14,"endColumn":28},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","severity":1,"message":"74","line":9,"column":12,"nodeType":"70","messageId":"71","endLine":9,"endColumn":17},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["75"],["76"],"'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]